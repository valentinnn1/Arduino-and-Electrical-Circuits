// constants won't change. They're used here to
// set pin numbers:
const int buttonPin =  8,  // the number of the pushbutton pin
             ledPin = 13;  // the number of the LED pin

// Variables will change:
bool       ledState = true; // the current state of the LED
int currButtonState =  LOW, // the current reading from the input pin
    prevButtonState =  LOW; // the previous reading from the input pin

// the following variables are unsigned long's because the time, measured in miliseconds,
// will quickly become a bigger number than can be stored in an int.
unsigned long debounceInterval = 25, // the debounce time; increase if the output flickers
              lastDebounceTime =  0, // the last time the output pin was toggled
              currDebounceTime =  0,
                 buttonCounter =  0,
                   loopCounter =  0;

void setup() 
{
  pinMode(buttonPin,  INPUT);
  pinMode   (ledPin, OUTPUT);
  // initialize serial comm
  Serial.begin(115200);
  // set initial LED state
  digitalWrite(ledPin, ledState);
}

void loop() 
{ // read the state of the switch into a local variable:
  int reading = digitalRead(buttonPin);
  
  currDebounceTime = millis();

  // check to see if you just pressed the button
  // (i.e. the input went from LOW to HIGH),  and you've waited
  // long enough since the last press to ignore any noise:

  // If the switch changed, due to noise or pressing:
  if (reading != prevButtonState) 
  { // reset the debouncing timer
    //lastDebounceTime = millis();
    lastDebounceTime = millis();
  }

  if ((currDebounceTime - lastDebounceTime) >= debounceInterval) 
  {
    // whatever the reading is at, it's been there for longer
    // than the debounce delay, so take it as the actual current state:

    // if the button state has changed:
    if (reading != currButtonState) 
    {
      currButtonState = reading;
      // only toggle the LED if the new button state is HIGH
      if (currButtonState == HIGH) 
      {
        ledState = !ledState;
      }
      else
      {
      	buttonCounter++;
      }
    }
  }

  // set the LED:
  digitalWrite(ledPin, ledState == true ? HIGH : LOW);

  // save the reading.  Next time through the loop,
  // it'll be the lastButtonState:
  prevButtonState = reading;
  
  Serial.print("LC:"); // Loop Counter
  Serial.print(++loopCounter);
  Serial.print(" | ");
  Serial.print("BC:"); // Button Counter
  Serial.print(buttonCounter);
  Serial.print(" | ");
  Serial.print("T\xB2:"); // Current Debounce Time
  Serial.print(currDebounceTime);
  Serial.print(" | ");
  Serial.print("T\xB9:"); // Last Debounce Time
  Serial.print(lastDebounceTime);
  Serial.print(" | ");
  Serial.print("\xF0T:"); // (T2 - T1)
  Serial.print(currDebounceTime - lastDebounceTime);
  Serial.print(" | ");
  Serial.print("LED:");
  Serial.println(ledState ? "ON" : "OFF");

  delay(50); // Only to speed up the simulation time
}